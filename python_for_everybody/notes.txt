Operators:
"is" and "is not"
    Python has an "is" operator that 
    can be used in logical expressions

    implies "is the same as"

    similar to, but stronger than ==

    "is not" is also a logical operator

    use "is" for booleans and None types, no floats variables and strings 
For Example: **************************
 0 is 0.0 = False because it's stonger than == and demands that type and value are == 

 You can you use 'in' as a logical operator and for loops

Python has a number of string functions what are in the string library

These functions are already built into every string - we invoke them by appending the
function to the string variable

These functions do not modify the original string, instead they return a new string that has
been altered

************Object oriented is x.whatever() also called a method call
